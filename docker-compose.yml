version: '3'
services:
  server:
    build:
      context: .
#      args:
#        network: host
    container_name: server
    ports:
      - 3005:3005
    depends_on:
      - mongoose
    restart: always
#    network_mode: host
    networks:
      - public    
    environment:
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
#      REACT_APP_API_ENDPOINT: "http://server:3005"


  mongoose:
    image: mongo
    container_name: mongoose
    volumes:
      - ./mongo/data:/data/db
    ports:
      - 27017:27017
#    network_mode: host
    networks:
      - public
  
  client:
    build:
      context: ./profile-server
#      args:
#        network: host
    ports:
     - 3000:3000
    depends_on:
      - server
    restart: always
#    network_mode: host
    networks:
      - public
    environment:
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
#      REACT_APP_API_ENDPOINT: "http://server:3005"


    
  nginx:
    restart: always
    build:
      context: nginx
      args:
        - HOSTNAME=${HOSTNAME}
    ports:
      - 80:80
      - 443:443
    container_name: docker_nginx
    volumes:
      - ./nginx/letsencrypt:/usr/share/nginx/html
      - ./certbot/etc:/usr/share/keys
#    network_mode: host
    networks:
      - public

  # Certbot for SSL automation
  #
  certbot:
    container_name: 'docker_certbot'
    image: certbot/certbot
    volumes:
      - ./keys:/var/lib/letsencrypt
      - ./nginx/letsencrypt:/data/letsencrypt
      - ./certbot/etc:/etc/letsencrypt
      - ./certbot/log:/var/log/letsencrypt
#    depends_on:
#      - nginx
    ports:
      - 8080:8080
#    network_mode: host

    networks:
      - public

networks:
  public:
    driver: bridge      
