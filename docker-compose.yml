version: '3'
services:

  server:
    build:
      context: .
      args:
        RECAPTCHA_SITE_KEY: ${RECAPTCHA_SITE_KEY}
        SKIP_RECAPTCHA: ${SKIP_RECAPTCHA}
    container_name: server
    ports:
      - 127.0.0.1:3005:3005
    depends_on:
      - mongoose
    restart: always
    networks:
      - public    
    environment:
      # - DANGEROUSLY_DISABLE_HOST_CHECK="true"
      - port=3005
      - connectionString
      - profileRootIRI
      - QUERY_RESULT_LIMIT
      - email_user
      - email_pass
      - email_server
      - system_email_from
      - clientURL
      - debug
      - lockTimeout=600000
      - PUBLIC_URL=/public
      - RECAPTCHA_SITE_KEY
      - RECAPTCHA_SECRET_KEY
      - SKIP_RECAPTCHA
      - REDIS_HOST
      - PROFILE_SESSION_SAVE_FREQUENCY_MS
      - NODE_ENV
      - VERIFY_URL_ROOT=https://${HOSTNAME}/app/user/validate
      - COOKIE_SECRET
      - SERVER_SECRET
  
  redis:
    image: redis
    restart: always
    container_name: redis
    volumes:
      - ./data/redis:/data
    ports:
      - 127.0.0.1:6379:6379
    networks:
      - public

  mongoose:
    image: mongo:4.6.4
    restart: always
    container_name: mongoose
    volumes:
      - ./data/mongo:/data/db
    ports:
      - 127.0.0.1:27017:27017
    networks:
      - public

  nginx:
    restart: always
    build:
      context: nginx
      args:
        HOSTNAME: ${HOSTNAME}
    ports:
      - 80:80
      - 443:443
    container_name: docker_nginx
    volumes:
      - ./data/nginx/letsencrypt:/usr/share/nginx/html
      - ./data/certbot/etc:/usr/share/keys
    networks:
      - public

  certbot:
    container_name: 'docker_certbot'
    image: certbot/certbot
    volumes:
      - ./data/keys:/var/lib/letsencrypt
      - ./data/nginx/letsencrypt:/data/letsencrypt
      - ./data/certbot/etc:/etc/letsencrypt
      - ./data/certbot/log:/var/log/letsencrypt
    ports:
      - 8080:8080
    networks:
      - public

networks:
  public:
    driver: bridge      

